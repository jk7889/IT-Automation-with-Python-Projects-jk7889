#!/usr/bin/env python3

import csv
import re
import operator
import sys


def func_get_error(log_file):
    """Counts the number of all types of errors in the log and returns error_dict dictionary"""
    error_dict = {}
    file = open(log_file, mode="r", encoding="UTF-8")
    for line in file:
        if re.search(r"ticky: ERROR: ([\w' ]*) ", line) is not None:
            result = re.search(r"ticky: ERROR: ([\w' ]*) ", line)
            if result[1] not in error_dict.keys():
                error_dict[result[1]] = 1
            else:
                error_dict[result[1]] += 1
    return error_dict


def func_get_user(log_file):
    """Counts the number of all INFO and ERROR messages generated by each user and returns user_dict dictionary"""
    user_dict = {}
    file = open(log_file, mode="r", encoding="UTF-8")
    for line in file:
        if re.search(r"ticky: (INFO|ERROR): .* \(([\w.]+)\)$", line) is not None:
            res = re.search(r"ticky: (INFO|ERROR): .* \(([\w.]+)\)$", line)
            if res[2] not in user_dict.keys() and res[1] == "INFO":
                user_dict[res[2]] = {res[1]: 1, "ERROR": 0}
            elif res[2] not in user_dict.keys() and res[1] == "ERROR":
                user_dict[res[2]] = {res[1]: 1, "INFO": 0}
            elif res[2] in user_dict.keys() and res[1] == "INFO":
                user_dict[res[2]][res[1]] += 1
            elif res[2] in user_dict.keys() and res[1] == "ERROR":
                user_dict[res[2]][res[1]] += 1
    return user_dict


if __name__ == "__main__":
    """Creates error_message.csv and user_statistics.csv from data in error_dict and user_dict respectively"""
    # Passes log.txt or any other log file with similar format as an argument
    log_f = sys.argv[1]
    error = func_get_error(log_f)
    user = func_get_user(log_f)

    file_error = open("error_message.csv", "w")
    file_error_write = csv.writer(file_error)
    file_error_write.writerow(["Error", "Count"])
    for key, value in sorted(error.items(), key=operator.itemgetter(1), reverse=True):
        file_error_write.writerow([key, value])

    user_stat = open("user_statistics.csv", "w")
    user_stat_write = csv.writer(user_stat)
    user_stat_write.writerow(["Username", "INFO", "ERROR"])
    for key, value in sorted(user.items()):
        user_stat_write.writerow([key, value["INFO"], value["ERROR"]])


